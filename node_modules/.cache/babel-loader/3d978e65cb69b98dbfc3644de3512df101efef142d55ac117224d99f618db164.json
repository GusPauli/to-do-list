{"ast":null,"code":"import ToDoItemEditForm from \"./ToDoItemEditForm.vue\";\nexport default {\n  components: {\n    ToDoItemEditForm\n  },\n  props: {\n    label: {\n      required: true,\n      type: String\n    },\n    done: {\n      default: false,\n      type: Boolean\n    },\n    id: {\n      required: true,\n      type: String\n    }\n  },\n  data() {\n    return {\n      isEditing: false\n    };\n  },\n  computed: {\n    isDone() {\n      return this.done;\n    }\n  },\n  methods: {\n    deleteToDo() {\n      this.$emit(\"item-deleted\");\n    },\n    toggleToItemEditForm() {\n      console.log(this.$refs.editButton);\n      this.isEditing = true;\n    },\n    itemEdited(newLabel) {\n      this.$emit(\"item-edited\", newLabel);\n      this.isEditing = false;\n      this.focusOnEditButton();\n    },\n    editCancelled() {\n      this.isEditing = false;\n      this.focusOnEditButton();\n    },\n    focusOnEditButton() {\n      this.$nextTick(() => {\n        const editButtonRef = this.$refs.editButton;\n        editButtonRef.focus();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAmCA,OAAOA,gBAAe,MAAO,wBAAwB;AAErD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,KAAK,EAAE;MAAEC,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEC;IAAO,CAAC;IACvCC,IAAI,EAAE;MAAEC,OAAO,EAAE,KAAK;MAAEH,IAAI,EAAEI;IAAQ,CAAC;IACvCC,EAAE,EAAE;MAAEN,QAAQ,EAAE,IAAI;MAAEC,IAAI,EAAEC;IAAO;EACrC,CAAC;EACDK,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,GAAG;MACP,OAAO,IAAI,CAACP,IAAI;IAClB;EACF,CAAC;EACDQ,OAAO,EAAE;IACPC,UAAU,GAAG;MACX,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC;IAC5B,CAAC;IACDC,oBAAoB,GAAG;MACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC;MAClC,IAAI,CAACV,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDW,UAAU,CAACC,QAAQ,EAAE;MACnB,IAAI,CAACP,KAAK,CAAC,aAAa,EAAEO,QAAQ,CAAC;MACnC,IAAI,CAACZ,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACa,iBAAiB,EAAE;IAC1B,CAAC;IACDC,aAAa,GAAG;MACd,IAAI,CAACd,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACa,iBAAiB,EAAE;IAC1B,CAAC;IACDA,iBAAiB,GAAG;MAClB,IAAI,CAACE,SAAS,CAAC,MAAM;QACnB,MAAMC,aAAY,GAAI,IAAI,CAACP,KAAK,CAACC,UAAU;QAC3CM,aAAa,CAACC,KAAK,EAAE;MACvB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["ToDoItemEditForm","components","props","label","required","type","String","done","default","Boolean","id","data","isEditing","computed","isDone","methods","deleteToDo","$emit","toggleToItemEditForm","console","log","$refs","editButton","itemEdited","newLabel","focusOnEditButton","editCancelled","$nextTick","editButtonRef","focus"],"sourceRoot":"","sources":["/home/gustavopauli/√Årea de Trabalho/UNIOESTE 2022/tds/to-do-list/todo-vue/src/components/ToDoItem.vue"],"sourcesContent":["<template>\n  <div class=\"stack-small\" v-if=\"!isEditing\">\n    <div class=\"custom-checkbox\">\n      <input\n        type=\"checkbox\"\n        class=\"checkbox\"\n        :id=\"id\"\n        :checked=\"isDone\"\n        @change=\"$emit('checkbox-changed')\" />\n      <label :for=\"id\" class=\"checkbox-label\">{{ label }}</label>\n    </div>\n    <div class=\"btn-group\">\n      <button\n        type=\"button\"\n        class=\"btn\"\n        ref=\"editButton\"\n        @click=\"toggleToItemEditForm\">\n        Edit\n        <span class=\"visually-hidden\">{{ label }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn__danger\" @click=\"deleteToDo\">\n        Delete\n        <span class=\"visually-hidden\">{{ label }}</span>\n      </button>\n    </div>\n  </div>\n  <to-do-item-edit-form\n    v-else\n    :id=\"id\"\n    :label=\"label\"\n    @item-edited=\"itemEdited\"\n    @edit-cancelled=\"editCancelled\"></to-do-item-edit-form>\n</template>\n\n<script>\nimport ToDoItemEditForm from \"./ToDoItemEditForm.vue\";\n\nexport default {\n  components: {\n    ToDoItemEditForm,\n  },\n  props: {\n    label: { required: true, type: String },\n    done: { default: false, type: Boolean },\n    id: { required: true, type: String },\n  },\n  data() {\n    return {\n      isEditing: false,\n    };\n  },\n  computed: {\n    isDone() {\n      return this.done;\n    },\n  },\n  methods: {\n    deleteToDo() {\n      this.$emit(\"item-deleted\");\n    },\n    toggleToItemEditForm() {\n      console.log(this.$refs.editButton);\n      this.isEditing = true;\n    },\n    itemEdited(newLabel) {\n      this.$emit(\"item-edited\", newLabel);\n      this.isEditing = false;\n      this.focusOnEditButton();\n    },\n    editCancelled() {\n      this.isEditing = false;\n      this.focusOnEditButton();\n    },\n    focusOnEditButton() {\n      this.$nextTick(() => {\n        const editButtonRef = this.$refs.editButton;\n        editButtonRef.focus();\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.custom-checkbox > .checkbox-label {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.25;\n  color: #0b0c0c;\n  display: block;\n  margin-bottom: 5px;\n}\n.custom-checkbox > .checkbox {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-weight: 400;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.25;\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  height: 2.5rem;\n  margin-top: 0;\n  padding: 5px;\n  border: 2px solid #0b0c0c;\n  border-radius: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n.custom-checkbox > input:focus {\n  outline: 3px dashed #fd0;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 2px;\n}\n.custom-checkbox {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 400;\n  font-size: 1.6rem;\n  line-height: 1.25;\n  display: block;\n  position: relative;\n  min-height: 40px;\n  margin-bottom: 10px;\n  padding-left: 40px;\n  clear: left;\n}\n.custom-checkbox > input[type=\"checkbox\"] {\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  position: absolute;\n  z-index: 1;\n  top: -2px;\n  left: -2px;\n  width: 44px;\n  height: 44px;\n  margin: 0;\n  opacity: 0;\n}\n.custom-checkbox > .checkbox-label {\n  font-size: inherit;\n  font-family: inherit;\n  line-height: inherit;\n  display: inline-block;\n  margin-bottom: 0;\n  padding: 8px 15px 5px;\n  cursor: pointer;\n  touch-action: manipulation;\n}\n.custom-checkbox > label::before {\n  content: \"\";\n  box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 40px;\n  height: 40px;\n  border: 2px solid currentColor;\n  background: transparent;\n}\n.custom-checkbox > input[type=\"checkbox\"]:focus + label::before {\n  border-width: 4px;\n  outline: 3px dashed #228bec;\n}\n.custom-checkbox > label::after {\n  box-sizing: content-box;\n  content: \"\";\n  position: absolute;\n  top: 11px;\n  left: 9px;\n  width: 18px;\n  height: 7px;\n  transform: rotate(-45deg);\n  border: solid;\n  border-width: 0 0 5px 5px;\n  border-top-color: transparent;\n  opacity: 0;\n  background: transparent;\n}\n.custom-checkbox > input[type=\"checkbox\"]:checked + label::after {\n  opacity: 1;\n}\n@media only screen and (min-width: 40rem) {\n  label,\n  input,\n  .custom-checkbox {\n    font-size: 19px;\n    font-size: 1.9rem;\n    line-height: 1.31579;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}