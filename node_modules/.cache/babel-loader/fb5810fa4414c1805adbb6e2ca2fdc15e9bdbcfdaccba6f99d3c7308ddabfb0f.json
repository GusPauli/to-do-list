{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"To-Do List\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  \"aria-labelledby\": \"list-summary\",\n  class: \"stack-large\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_to_do_form = _resolveComponent(\"to-do-form\");\n  const _component_to_do_item = _resolveComponent(\"to-do-item\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_to_do_form, {\n    onTodoAdded: $options.addToDo\n  }, null, 8 /* PROPS */, [\"onTodoAdded\"]), _createElementVNode(\"h2\", {\n    id: \"list-summary\",\n    ref: \"listSummary\",\n    tabindex: \"-1\"\n  }, _toDisplayString($options.listSummary), 513 /* TEXT, NEED_PATCH */), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ToDoItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createVNode(_component_to_do_item, {\n      label: item.label,\n      done: item.done,\n      id: item.id,\n      onCheckboxChanged: $event => $options.updateDoneStatus(item.id),\n      onItemDeleted: $event => $options.deleteToDo(item.id),\n      onItemEdited: $event => $options.editToDo(item.id, $event)\n    }, null, 8 /* PROPS */, [\"label\", \"done\", \"id\", \"onCheckboxChanged\", \"onItemDeleted\", \"onItemEdited\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,oBAAmB,YAAf,YAAU;;EAGV,iBAAe,EAAC,cAAc;EAACC,KAAK,EAAC;;;;;uBAJ3CC,oBAgBM,OAhBNC,UAgBM,GAfJC,UAAmB,EACnBC,aAA+CC;IAAlCC,WAAU,EAAEC;EAAO,0CAChCR,oBAA4E;IAAxED,EAAE,EAAC,cAAc;IAACU,GAAG,EAAC,aAAa;IAACC,QAAQ,EAAC;sBAAQF,oBAAW,gCACpER,oBAWK,MAXLW,UAWK,sBAVHT,oBASKU,6BATcC,eAAS,EAAjBC,IAAI;yBAAfZ,oBASK;MAT0Ba,GAAG,EAAED,IAAI,CAACf;QACvCM,aAOaW;MANVC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;MACfnB,EAAE,EAAEe,IAAI,CAACf,EAAE;MACXoB,iBAAgB,YAAEX,yBAAgB,CAACM,IAAI,CAACf,EAAE;MAC1CqB,aAAY,YAAEZ,mBAAU,CAACM,IAAI,CAACf,EAAE;MAChCsB,YAAW,YAAEb,iBAAQ,CAACM,IAAI,CAACf,EAAE,EAAEuB,MAAM","names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_to_do_form","onTodoAdded","$options","ref","tabindex","_hoisted_3","_Fragment","$data","item","key","_component_to_do_item","label","done","onCheckboxChanged","onItemDeleted","onItemEdited","$event"],"sourceRoot":"","sources":["/home/gustavopauli/√Årea de Trabalho/UNIOESTE 2022/tds/todo-vue/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>To-Do List</h1>\n    <to-do-form @todo-added=\"addToDo\"></to-do-form>\n    <h2 id=\"list-summary\" ref=\"listSummary\" tabindex=\"-1\">{{ listSummary }}</h2>\n    <ul aria-labelledby=\"list-summary\" class=\"stack-large\">\n      <li v-for=\"item in ToDoItems\" :key=\"item.id\">\n        <to-do-item\n          :label=\"item.label\"\n          :done=\"item.done\"\n          :id=\"item.id\"\n          @checkbox-changed=\"updateDoneStatus(item.id)\"\n          @item-deleted=\"deleteToDo(item.id)\"\n          @item-edited=\"editToDo(item.id, $event)\">\n        </to-do-item>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ToDoItem from \"./components/ToDoItem.vue\";\nimport ToDoForm from \"./components/ToDoForm.vue\";\nimport uniqueId from \"lodash.uniqueid\";\n\nexport default {\n  name: \"app\",\n  components: {\n    ToDoItem,\n    ToDoForm,\n  },\n  data() {\n    return {\n      ToDoItems: [],\n    };\n  },\n  methods: {\n    addToDo(toDoLabel) {\n      this.ToDoItems.push({\n        id: uniqueId(\"todo-\"),\n        label: toDoLabel,\n        done: false,\n      });\n    },\n    updateDoneStatus(toDoId) {\n      const toDoToUpdate = this.ToDoItems.find((item) => item.id === toDoId);\n      toDoToUpdate.done = !toDoToUpdate.done;\n    },\n    deleteToDo(toDoId) {\n      const itemIndex = this.ToDoItems.findIndex((item) => item.id === toDoId);\n      this.ToDoItems.splice(itemIndex, 1);\n      this.$refs.listSummary.focus();\n    },\n    editToDo(toDoId, newLabel) {\n      const toDoToEdit = this.ToDoItems.find((item) => item.id === toDoId);\n      toDoToEdit.label = newLabel;\n    },\n  },\n  computed: {\n    listSummary() {\n      const numberFinishedItems = this.ToDoItems.filter(\n        (item) => item.done\n      ).length;\n      return `${numberFinishedItems} out of ${this.ToDoItems.length} items completed`;\n    },\n  },\n};\n</script>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}