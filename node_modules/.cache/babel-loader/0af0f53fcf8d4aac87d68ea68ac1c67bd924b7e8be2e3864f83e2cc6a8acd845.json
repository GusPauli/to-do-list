{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fb76d5ac\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"edit-label\"\n};\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = {\n  class: \"btn-group\"\n};\nconst _hoisted_4 = {\n  class: \"visually-hidden\"\n};\nconst _hoisted_5 = {\n  type: \"submit\",\n  class: \"btn btn__primary\"\n};\nconst _hoisted_6 = {\n  class: \"visually-hidden\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"stack-small\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.onSubmit && $options.onSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_1, \"Edit Name for \\\"\" + _toDisplayString($props.label) + \"\\\"\", 1), _withDirectives(_createElementVNode(\"input\", {\n    id: $props.id,\n    ref: \"labelInput\",\n    type: \"text\",\n    autocomplete: \"off\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newLabel = $event)\n  }, null, 8, _hoisted_2), [[_vModelText, $data.newLabel, void 0, {\n    lazy: true,\n    trim: true\n  }]])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onCancel && $options.onCancel(...args))\n  }, [_createTextVNode(\" Cancel \"), _createElementVNode(\"span\", _hoisted_4, \"editing \" + _toDisplayString($props.label), 1)]), _createElementVNode(\"button\", _hoisted_5, [_createTextVNode(\" Save \"), _createElementVNode(\"span\", _hoisted_6, \"edit for \" + _toDisplayString($props.label), 1)])])], 32);\n}","map":{"version":3,"mappings":";;;EAGaA,KAAK,EAAC;AAAY;;;EAQtBA,KAAK,EAAC;AAAW;;EAGZA,KAAK,EAAC;AAAiB;;EAEvBC,IAAI,EAAC,QAAQ;EAACD,KAAK,EAAC;;;EAEpBA,KAAK,EAAC;AAAiB;;uBAjBnCE,oBAoBO;IApBDF,KAAK,EAAC,aAAa;IAAEG,QAAM,wDAAUC,+CAAQ;MACjDC,oBAQM,cAPJA,oBAAuE,SAAvEC,UAAuE,EAA7C,kBAAoB,oBAAGC,YAAK,IAAG,IAAM,sBAC/DF,oBAKiC;IAJ9BG,EAAE,EAAED,SAAE;IACPE,GAAG,EAAC,YAAY;IAChBR,IAAI,EAAC,MAAM;IACXS,YAAY,EAAC,KAAK;+DACCC,cAAQ;0CAARA,cAAQ;UAA3B,IAA4B;UAA5B;UAEJN,oBASM,OATNO,UASM,GARJP,oBAGS;IAHDJ,IAAI,EAAC,QAAQ;IAACD,KAAK,EAAC,KAAK;IAAEa,OAAK,yCAAET,+CAAQ;uBAAE,UAElD,uBAAwD,QAAxDU,UAAwD,EAA1B,UAAQ,oBAAGP,YAAK,SAEhDF,oBAGS,UAHTU,UAGS,oBAHsC,QAE7C,uBAAyD,QAAzDC,UAAyD,EAA3B,WAAS,oBAAGT,YAAK","names":["class","type","_createElementBlock","onSubmit","$options","_createElementVNode","_hoisted_1","$props","id","ref","autocomplete","$data","_hoisted_3","onClick","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/home/gustavopauli/√Årea de Trabalho/UNIOESTE 2022/tds/todo-vue/src/components/ToDoItemEditForm.vue"],"sourcesContent":["<template>\n  <form class=\"stack-small\" @submit.prevent=\"onSubmit\">\n    <div>\n      <label class=\"edit-label\">Edit Name for &quot;{{ label }}&quot;</label>\n      <input\n        :id=\"id\"\n        ref=\"labelInput\"\n        type=\"text\"\n        autocomplete=\"off\"\n        v-model.lazy.trim=\"newLabel\" />\n    </div>\n    <div class=\"btn-group\">\n      <button type=\"button\" class=\"btn\" @click=\"onCancel\">\n        Cancel\n        <span class=\"visually-hidden\">editing {{ label }}</span>\n      </button>\n      <button type=\"submit\" class=\"btn btn__primary\">\n        Save\n        <span class=\"visually-hidden\">edit for {{ label }}</span>\n      </button>\n    </div>\n  </form>\n</template>\n<script>\nexport default {\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    id: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      newLabel: this.label,\n    };\n  },\n  methods: {\n    onSubmit() {\n      if (this.newLabel && this.newLabel !== this.label) {\n        this.$emit(\"item-edited\", this.newLabel);\n      }\n    },\n    onCancel() {\n      this.$emit(\"edit-cancelled\");\n    },\n  },\n  mounted() {\n    const labelInputRef = this.$refs.labelInput;\n    labelInputRef.focus();\n  },\n};\n</script>\n<style scoped>\n.edit-label {\n  font-family: Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #0b0c0c;\n  display: block;\n  margin-bottom: 5px;\n}\ninput {\n  display: inline-block;\n  margin-top: 0.4rem;\n  width: 100%;\n  min-height: 4.4rem;\n  padding: 0.4rem 0.8rem;\n  border: 2px solid #565656;\n}\nform {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\nform > * {\n  flex: 0 0 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}